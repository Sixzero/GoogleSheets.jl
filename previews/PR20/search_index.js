var documenterSearchIndex = {"docs":
[{"location":"#GoogleSheets.jl-Documentation","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"","category":"section"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"","category":"page"},{"location":"#Enums","page":"GoogleSheets.jl Documentation","title":"Enums","text":"","category":"section"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"AuthScope","category":"page"},{"location":"#GoogleSheets.AuthScope","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.AuthScope","text":"An authorization scope for accessing Google resources.\n\nAUTH_SCOPE_READONLY:  Allows read-only access to the user's sheets and their properties.\nAUTH_SCOPE_READWRITE: Allows read/write access to the user's sheets and their properties.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"ValueType","category":"page"},{"location":"#GoogleSheets.ValueType","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.ValueType","text":"A Google Sheets value type.\n\nVALUE_TYPE_MIN: minimum value in a range\nVALUE_TYPE_MAX: maximum value in a range\nVALUE_TYPE_NUMBER: exact number\nVALUE_TYPE_PERCENT: percentage of a range\nVALUE_TYPE_PERCENTILE: percentile of a range\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"ConditionType","category":"page"},{"location":"#GoogleSheets.ConditionType","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.ConditionType","text":"A Google Sheets condition type.\n\nCONDITION_TYPE_NUMBER_GREATER: value must be greater than the condition value.\nCONDITION_TYPE_NUMBER_GREATER_THAN_EQ: value must be greater than or equal to the condition value.\nCONDITION_TYPE_NUMBER_LESS: value must be less than the condition value.\nCONDITION_TYPE_NUMBER_LESS_THAN_EQ: value must be less than or equal to the condition value.\nCONDITION_TYPE_NUMBER_EQ: value must be equal to the condition value.\nCONDITION_TYPE_NUMBER_NOT_EQ: value must not be equal to the condition value.\nCONDITION_TYPE_NUMBER_BETWEEN: value must be between the two condition values.\nCONDITION_TYPE_NUMBER_NOT_BETWEEN: value must not be between the two condition values.\nCONDITION_TYPE_TEXT_CONTAINS: value must contain the condition value.\nCONDITION_TYPE_TEXT_NOT_CONTAINS: value must not contain the condition value.\nCONDITION_TYPE_TEXT_STARTS_WITH: value must start with the condition value.\nCONDITION_TYPE_TEXT_ENDS_WITH: value must end with the condition value.\nCONDITION_TYPE_TEXT_EQ: value must equal the condition value.\nCONDITION_TYPE_TEXT_NOT_EQ: value must not equal the condition value.\nCONDITION_TYPE_TEXT_IS_EMAIL: value must be a valid email address.\nCONDITION_TYPE_TEXT_IS_URL: value must be a valid URL.\nCONDITION_TYPE_DATE_EQ: value must have the same date as the condition value.\nCONDITION_TYPE_DATE_NOT_EQ: value must not have the same date as the condition value.\nCONDITION_TYPE_DATE_BEFORE: value's date must be before the date of the condition value.\nCONDITION_TYPE_DATE_AFTER: value's date must be before the date of the condition value.\nCONDITION_TYPE_DATE_ON_OR_BEFORE: value's date must be on or before the date of the condition value.\nCONDITION_TYPE_DATE_ON_OR_AFTER: value's date must be on or after the date of the condition value.\nCONDITION_TYPE_DATE_BETWEEN: value's date must be between the dates of the condition values.\nCONDITION_TYPE_DATE_NOT_BETWEEN: value's date must not be between the dates of the condition values.\nCONDITION_TYPE_DATE_IS_VALID: value must be a date.\nCONDITION_TYPE_ONE_OF_LIST: value must be present in the condition values.\nCONDITION_TYPE_BLANK: value must be empty.\nCONDITION_TYPE_NOT_BLANK: value must not be empty.\nCONDITION_TYPE_CUSTOM_FORMULA: condition formula must evaluate to true.\nCONDITION_TYPE_BOOLEAN: value must be TRUE/FALSE.\nCONDITION_TYPE_ONE_OF_RANGE: value is present in the condition value's cell range.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"NumberFormatType","category":"page"},{"location":"#GoogleSheets.NumberFormatType","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.NumberFormatType","text":"A Google Sheets number format type.\n\nNUMBER_FORMAT_TYPE_TEXT: text formatting, e.g. 1000.12\nNUMBER_FORMAT_TYPE_NUMBER: number formatting, e.g. 1,000.12\nNUMBER_FORMAT_TYPE_PERCENT: percent formatting, e.g. 10.12%\nNUMBER_FORMAT_TYPE_CURRENCY: currency formatting, e.g. $ 1,000.12\nNUMBER_FORMAT_TYPE_DATE: date formatting, e.g. 9/26/2008\nNUMBER_FORMAT_TYPE_TIME: time formatting, e.g. 3:59:00 PM\nNUMBER_FORMAT_TYPE_DATE_TIME: date+time formatting, e.g. 9/26/08 15:59:00\nNUMBER_FORMAT_TYPE_SCIENTIFIC: scientific number formatting, e.g. 1.01E+03\n\n\n\n\n\n","category":"type"},{"location":"#Types","page":"GoogleSheets.jl Documentation","title":"Types","text":"","category":"section"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"GoogleSheetsClient","category":"page"},{"location":"#GoogleSheets.GoogleSheetsClient","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.GoogleSheetsClient","text":"A Google Sheets client.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"Spreadsheet","category":"page"},{"location":"#GoogleSheets.Spreadsheet","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.Spreadsheet","text":"A spreadsheet.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"Sheet","category":"page"},{"location":"#GoogleSheets.Sheet","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.Sheet","text":"A sheet in a spreadsheet.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"CellRange","category":"page"},{"location":"#GoogleSheets.CellRange","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.CellRange","text":"A range of cells within a spreadsheet.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"CellRanges","category":"page"},{"location":"#GoogleSheets.CellRanges","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.CellRanges","text":"Multiple ranges of cells within a spreadsheet.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"CellRangeValues","category":"page"},{"location":"#GoogleSheets.CellRangeValues","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.CellRangeValues","text":"A range of cell values within a spreadsheet.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"UpdateSummary","category":"page"},{"location":"#GoogleSheets.UpdateSummary","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.UpdateSummary","text":"Summary of updated updated cells.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"CellIndexRange1D","category":"page"},{"location":"#GoogleSheets.CellIndexRange1D","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.CellIndexRange1D","text":"1D Range of cell values.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"CellIndexRange2D","category":"page"},{"location":"#GoogleSheets.CellIndexRange2D","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.CellIndexRange2D","text":"2D Range of cell values.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"CellFormat","category":"page"},{"location":"#GoogleSheets.CellFormat","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.CellFormat","text":"Formatting for a cell.\n\n\n\n\n\n","category":"type"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"DataFrame","category":"page"},{"location":"#DataFrames.DataFrame","page":"GoogleSheets.jl Documentation","title":"DataFrames.DataFrame","text":"DataFrame(values::CellRangeValues)::Union{Nothing,DataFrame}\n\nCreates a DataFrame from spreadsheet range values.  The first row is converted to column names.  All other rows are converted to string values.\n\nArguments\n\nvalues::CellRangeValues: cell values\n\n\n\n\n\n","category":"type"},{"location":"#Functions","page":"GoogleSheets.jl Documentation","title":"Functions","text":"","category":"section"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"sheets_client","category":"page"},{"location":"#GoogleSheets.sheets_client","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.sheets_client","text":"sheets_client(scopes::Union{AuthScope,Array{AuthScope,1}}; \n    rate_limiter_read::AbstractRateLimiter=default_rate_limiter_read, \n    rate_limiter_write::AbstractRateLimiter=default_rate_limiter_write)::GoogleSheetsClient\n\nCreates a client for accessing Google Sheets.\n\nArguments\n\nscopes::Union{AuthScope,Array{AuthScope,1}}: authorization scopes.\nrate_limiter_read::AbstractRateLimiter=default_rate_limiter_read: rate limiter for reading.\nrate_limiter_write::AbstractRateLimiter=default_rate_limiter_write: rate limiter for writing.\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"sheet_names","category":"page"},{"location":"#GoogleSheets.sheet_names","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.sheet_names","text":"sheet_names(client::GoogleSheetsClient, spreadsheet::Spreadsheet)::Vector{String}\n\nGets the names of the sheets in the spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"sheets","category":"page"},{"location":"#GoogleSheets.sheets","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.sheets","text":"sheets(client::GoogleSheetsClient, spreadsheet::Spreadsheet)::Vector{Sheet}\n\nGets the sheets in the spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"batch_update!","category":"page"},{"location":"#GoogleSheets.batch_update!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.batch_update!","text":"batch_update!(client::GoogleSheetsClient, spreadsheet::Spreadsheet, body::Dict)::Dict{Any,Any}\n\nApplies one or more updates to a spreadsheet.\n\nEach request is validated before being applied. If any request is not valid then the entire request will fail and nothing will be applied.\n\nCommon batch_update! functionality: Charts: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/charts Filters: https://developers.google.com/sheets/api/guides/filters Basic formatting: https://developers.google.com/sheets/api/samples/formatting Conditional formatting: https://developers.google.com/sheets/api/samples/conditional-formatting Conditional formatting: https://developers.google.com/sheets/api/guides/conditional-format\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\nbody::Dict: updte body\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"add_sheet!","category":"page"},{"location":"#GoogleSheets.add_sheet!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.add_sheet!","text":"add_sheet!(client::GoogleSheetsClient, spreadsheet::Spreadsheet, title::AbstractString)::Dict{Any,Any}\n\nAdds a new sheet to a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\ntitle::AbstractString: sheet title\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"delete_sheet!","category":"page"},{"location":"#GoogleSheets.delete_sheet!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.delete_sheet!","text":"delete_sheet!(client::GoogleSheetsClient, spreadsheet::Spreadsheet, title::AbstractString)::Dict{Any,Any}\n\nRemoves a sheet from a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\ntitle::AbstractString: sheet title\n\n\n\n\n\ndelete_sheet!(client::GoogleSheetsClient, spreadsheet::Spreadsheet, sheet_id::Int64)::Dict{Any,Any}\n\nRemoves a sheet from a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\nsheet_id::Int64: sheet id\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"freeze!","category":"page"},{"location":"#GoogleSheets.freeze!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.freeze!","text":"freeze!(client::GoogleSheetsClient, sheet::Sheet, rows::Int64=0, cols::Int64=0)::Dict{Any,Any}\n\nFreeze rows and columns in a sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nsheet::Sheet: sheet\nrows::Int64=0: number of rows\ncols::Int64=0: number of columns\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"append!","category":"page"},{"location":"#Base.append!","page":"GoogleSheets.jl Documentation","title":"Base.append!","text":"append!(client::GoogleSheetsClient, sheet::Sheet, rows::Int64=0, cols::Int64=0)::Dict{Any,Any}\n\nAppend rows and columns to a sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nsheet::Sheet: sheet\nrows::Int64=0: number of rows\ncols::Int64=0: number of columns\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"insert_rows!","category":"page"},{"location":"#GoogleSheets.insert_rows!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.insert_rows!","text":"insert_rows!(client::GoogleSheetsClient, range::CellIndexRange1D)::Dict{Any,Any}\n\nInsert rows into to a sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nrange::CellIndexRange1D: cell index range\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"insert_cols!","category":"page"},{"location":"#GoogleSheets.insert_cols!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.insert_cols!","text":"insert_cols!(client::GoogleSheetsClient, range::CellIndexRange1D)::Dict{Any,Any}\n\nInsert columns into to a sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nrange::CellIndexRange1D: cell index range\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"delete_rows!","category":"page"},{"location":"#GoogleSheets.delete_rows!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.delete_rows!","text":"Delete rows from a sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nrange::CellIndexRange1D: cell index range\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"delete_cols!","category":"page"},{"location":"#GoogleSheets.delete_cols!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.delete_cols!","text":"delete_cols!(client::GoogleSheetsClient, range::CellIndexRange1D)::Dict{Any,Any}\n\nDelete columns from a sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nrange::CellIndexRange1D: cell index range\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"meta","category":"page"},{"location":"#GoogleSheets.meta","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.meta","text":"meta(client::GoogleSheetsClient, spreadsheet::Spreadsheet)::Dict{Any,Any}\n\nGets metadata about a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\n\n\n\n\n\nmeta(client::GoogleSheetsClient, spreadsheet::Spreadsheet, key::AbstractString, value)::Dict{Any,Any}\n\nGets metadata about a spreadsheet key-value pair.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\nkey:AbstractString: key\nvalue: value\n\n\n\n\n\nmeta(client::GoogleSheetsClient, spreadsheet::Spreadsheet, title::AbstractString)::Dict{Any,Any}\n\nGets metadata about a spreadsheet sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\ntitle::AbstractString: sheet title\n\n\n\n\n\nmeta(client::GoogleSheetsClient, spreadsheet::Spreadsheet, sheet_id::Int64)::Dict{Any,Any}\n\nGets metadata about a spreadsheet sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\nsheet_id::Int64: sheet id\n\n\n\n\n\nmeta(client::GoogleSheetsClient, sheet::Sheet)::Dict{Any,Any}\n\nGets metadata about a spreadsheet sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nsheet::Sheet: sheet\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"show","category":"page"},{"location":"#Base.show","page":"GoogleSheets.jl Documentation","title":"Base.show","text":"show(client::GoogleSheetsClient, spreadsheet::Spreadsheet)\n\nPrints metadata about a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\n\n\n\n\n\nshow(client::GoogleSheetsClient, spreadsheet::Spreadsheet, title::AbstractString)\n\nPrints metadata about a spreadsheet sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\ntitle::AbstractString: sheet title\n\n\n\n\n\nshow(client::GoogleSheetsClient, spreadsheet::Spreadsheet, sheet_id::Int64)\n\nPrints metadata about a spreadsheet sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nspreadsheet::Spreadsheet: spreadsheet\nsheet_id::Int64: sheet id\n\n\n\n\n\nshow(client::GoogleSheetsClient, sheet::Sheet)\n\nPrints metadata about a spreadsheet sheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nsheet::Sheet: sheet\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"get","category":"page"},{"location":"#Base.get","page":"GoogleSheets.jl Documentation","title":"Base.get","text":"get(client::GoogleSheetsClient, range::CellRange)::CellRangeValues\n\nGets a range of cell values from a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nrange::CellRange: cell range\n\n\n\n\n\nget(client::GoogleSheetsClient, ranges::CellRanges)::Vector{CellRangeValues}\n\nGets multiple ranges of cell values from a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nranges::CellRanges: cell ranges\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"update!","category":"page"},{"location":"#GoogleSheets.update!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.update!","text":"update!(client::GoogleSheetsClient, range::CellRange, values::Array{<:Any,2}; raw::Bool=false)::UpdateSummary\n\nUpdates a range of cell values in a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client for interacting with Google Sheets.\nrange::CellRange: cell range to modify.\nvalues::Array{<:Any,2}: values to place in the spreadsheet.\nraw::Bool=false: true treats values as raw, unparsed values and and are simply   inserted as a string.  false treats values exactly as if they were entered into   the Google Sheets UI, for example \"=A1+B1\" is a formula.\n\n\n\n\n\nupdate!(client::GoogleSheetsClient, range::CellRange, df::DataFrame; kwargs...)::UpdateSummary\n\nUpdates a range of cell values in a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client for interacting with Google Sheets.\nrange::CellRange: cell range to modify.\ndf::DataFrame: dataframe of values.\nkwargs...: keyword arguments.\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"clear!","category":"page"},{"location":"#GoogleSheets.clear!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.clear!","text":"clear!(client::GoogleSheetsClient, range::CellRange)::UpdateSummary\n\nClears a range of cell values in a spreadsheet.\n\nArguments\n\nclient::GoogleSheetsClient: client\nrange::CellRange: cell range\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"format!","category":"page"},{"location":"#GoogleSheets.format!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.format!","text":"format!(client::GoogleSheetsClient, range::CellIndexRange2D, format::CellFormat)::Dict{Any,Any}\n\nFormats a range of cells.\n\nArguments\n\nclient::GoogleSheetsClient: client.\nrange::CellIndexRange2D: cell index range.\nformat::CellFormat: cell format.\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"format_conditional!","category":"page"},{"location":"#GoogleSheets.format_conditional!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.format_conditional!","text":"format_conditional!(client::GoogleSheetsClient, range::CellIndexRange2D, format::CellFormat, \n    condition_type::ConditionType, values...)::Dict{Any,Any}\n\nFormats a range of cells if a condition is met.\n\nArguments\n\nclient::GoogleSheetsClient: client.\nrange::CellIndexRange2D: cell index range.\nformat::CellFormat: cell format.\ncondition_type::ConditionType: type of condition.\nvalues...: values for the condition.\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"format_color_gradient!","category":"page"},{"location":"#GoogleSheets.format_color_gradient!","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.format_color_gradient!","text":"format_color_gradient!(client::GoogleSheetsClient, range::CellIndexRange2D; \n    min_color::Colorant=colorant\"salmon\", min_value_type::ValueType=VALUE_TYPE_MIN, min_value::Union{Nothing,Number}=nothing, \n    mid_color::Union{Nothing,Colorant}=nothing, mid_value_type::Union{Nothing,ValueType}=nothing, mid_value::Union{Nothing,Number}=nothing, \n    max_color::Colorant=colorant\"springgreen\", max_value_type::ValueType=VALUE_TYPE_MAX, max_value::Union{Nothing,Number}=nothing)::Dict{Any,Any}\n\nSets color gradient formatting.\n\nArguments\n\nclient::GoogleSheetsClient: client.\nrange::CellIndexRange2D: cell index range.\nmin_color::Colorant=colorant\"salmon\": color for the minimum value.\nmin_value_type::ValueType=VALUE_TYPE_MIN: minimum value type.\nmin_value::Union{Nothing,Number}=nothing: minimum value.\nmid_color::Union{Nothing,Colorant}=nothing: color for the mid value.\nmid_value_type::Union{Nothing,ValueType}=nothing: mid value type.\nmid_value::Union{Nothing,Number}=nothing: mid value.\nmax_color::Colorant=colorant\"springgreen\": color for the maximum value.\nmax_value_type::ValueType=VALUE_TYPE_MAX: maximum value type.\nmax_value::Union{Nothing,Number}=nothing: maximum value.\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"GoogleSheets.update_default_rate_limiter","category":"page"},{"location":"#GoogleSheets.update_default_rate_limiter","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.update_default_rate_limiter","text":"update_default_rate_limiter(rate_limiter_tokens_per_sec::Float64; rate_limiter_max_tokens::Float64=5)\n\nUpdate the default rate limiter.\n\nArguments\n\nrate_limiter_tokens_per_sec::Float64: rate limiter number of tokens per second.\nrate_limiter_max_tokens::Float64=5: rate limiter max number of tokens.\n\n\n\n\n\nupdate_default_rate_limiter(rate_limiter_read::AbstractRateLimiter, rate_limiter_write::AbstractRateLimiter)\n\nUpdate the default rate limiter.\n\nArguments\n\nrate_limiter_read::AbstractRateLimiter: rate limiter for reading.\nrate_limiter_write::AbstractRateLimiter: rate limiter for writing.\n\n\n\n\n\n","category":"function"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"GoogleSheets.credentials_file","category":"page"},{"location":"#GoogleSheets.credentials_file","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.credentials_file","text":"credentials_file()::String\n\nGets the credentials file needed to log into Google. The file is loaded from the GOOGLESHEETSCREDENTIALS environment variable if it is present; otherwise, it is loaded from the configuration directory, which defaults to ~/.julia/config/google_sheets/.\n\nSee the python quick start reference for a link to generate credentials. https://developers.google.com/sheets/api/quickstart/python\n\nSee the API credentials page to create or revoke credentials. https://console.developers.google.com/apis/credentials\n\n\n\n\n\n","category":"function"},{"location":"#Index","page":"GoogleSheets.jl Documentation","title":"Index","text":"","category":"section"},{"location":"","page":"GoogleSheets.jl Documentation","title":"GoogleSheets.jl Documentation","text":"","category":"page"}]
}
